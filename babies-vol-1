1. давайте рассмотрим такой пример
у нас есть обект swag. обект - это комплексный тип данных это значит что он может содержать в себе коллекцию каких-то данных
действительно он содержит ключ makeSwag - это функция, и ключ amISwag это boolean.
слава богу что javascript поддерживает одновременно и фенкциональный подход програмирования и обектно ореентированый подход, вель можно написать два раза больше говнокода и хаков.

ключ который содержит в себе какуюто информаци отличную от функции называется проперти
ключ который содержит в себе функцию называется метод.

2. для комплексных инстансов можно добавлять методы и свойства, вот например array зухов, можно добаить этому эррею метод makeSuperZuchami, и этот метод добавит эррею пропенти superZuchi тру.

3. а теперь другой пример, у меня есть пятерка, мне кто-то одбил. у нее тоже есть методы, методы конечно принадлежат не ей, а родителям, но вель почти каждый из вас ездил на машине папы?
можно попытаться записать в нее какие-то свойства, но они туда не влезут.

4. о привет мои дорогие null и undefined как там у вас с методами и свойствами?

5. Числа
	числа в джаваскрипте могут быть дробным числом, бесконечностью и NaN	
	числа в джаваскрипте всегда дробные
	джаваскрипт, как и другие языки не умеет точно считать
	чтобы преобразовать что-то в число лучше использовать функцию number
	практически все нужные математические фенкции доступны в фенкции Math
	для парсинга строки как числа, всегда можно попробывать использовать фенкцию parseInt, parseFloat
6. великолепный NaN
	NaN настолько крут что никто не может с ним сравниться,
	он настолько крут, что даже он сам не может сравниться с собой
	для определения яаляется ли что-то наном есть встроеная фенкция браузера isNaN, но NaN настольео крут что даже она не может определить правильно NaN это или какойто позер который хочет быть на него похожим. поэтому лучге написать свою фенкцию которая будет работать немного получге

7. Стринги
	чтобы инициалтзтровать строку достаточно испотзовать одинарные или двойные ковычки
	если мы хотим инициализировать строку и иметь возможность задать ее часть как результат выполнения скрипта - можно использовать стринг темплейт
	чтобы преобразовать что-то в строку нужно использовать фенкцию String или метод toString
8. методы строк.
все методы строк можно разбить на несколько груп. давайте поочереди их разберем.

	1 греппа это обебеденения строк.
		можно просто вдять и сложить строки - бинарный плюс отлично с этим справится.
		можно испотзовать метод concat
		или даже мтод repeat который повторит строку столько раз сколько мы указали в аргементе
	2. rozdzielać строки 
		иетод позволяет разделить строку на подстроки - разделительным символом или группой символов будет агрумент фенкции который мы подадим, результатом выполнения будет массив строк на которые 			была разьита строка
	3. substrings - у строки можно всегда взять подстроку для этого есть два метода - substring и slice
		оюа принимают значения старт - енд, но по разноме работают с отрицательными аргументами, substring нтерпритирует отрицательный аргумент как 0, да к томе же меняет аргументы местами если начало больше конца
	4. чтобы поменять регистр слов можно использовать toUpper/toLowercase
	5. для того чтобы получить значение симпола на какойто позиции можно воспользоваться фенкцикй charAt или просто указать номер этого симфола в строке
	6. для триминга строк существует аэ три метода trim, trimRight, trimLeft
	7 для проверки строк есть сразу 7 методов: 
		endsWith - проверяет заканчивается ли тестируемая строка, строкой указаной в аргументе
		startsWith - проверяет начинается ли тестируемая строка, строкой указаной в аргументе
		includes - проверяет содержит ли тестируемая строка, подстроку указаную в аргументе
		indexOf, lastIndexOf - ишет подстроку указаную в аргументе, и возвращает игдекс вхождения - либо первого либо последнего. в случае если тестируемая строка не содержит искомую подстроку то возвращает -1 
 		 

	 





 















		
 

 

















 
